{"version":3,"sources":["reportWebVitals.ts","index.tsx","component/Main.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Main","document","getElementById","ENDPOINT","useState","Display","setDisplay","viewRef","useRef","audioRef","a","current","pause","cv","createElement","width","videoWidth","height","videoHeight","getContext","drawImage","data","atob","toDataURL","split","file","Blob","Uint8Array","Buffer","from","type","fd","FormData","append","fetch","method","headers","body","OCR_Response","json","OCR_Result","result","console","log","JSON","stringify","text","TTS_Response","TTS_Result","src","play","detail","useEffect","navigator","mediaDevices","getUserMedia","audio","video","ideal","facingMode","media","srcObject","onloadedmetadata","e","catch","alert","className","ref","playsInline","controls","onClick"],"mappings":"yNAceA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,K,oGCbMe,EAAW,iBAwGFH,IAtGf,WACC,MAA8BI,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAUC,iBAAyB,MACnCC,EAAWD,iBAAyB,MAH3B,4CAuBf,4CAAAE,EAAA,0DACKH,EAAQI,UAAWF,EAASE,QADjC,wBAEEJ,EAAQI,QAAQC,QAChBN,EAAW,gBACPO,EAAKZ,SAASa,cAAc,WAC7BC,MAAQR,EAAQI,QAAQK,WAC3BH,EAAGI,OAASV,EAAQI,QAAQO,YAC5B,UAAAL,EAAGM,WAAW,aAAd,SAAqBC,UAAUb,EAAQI,QAAS,EAAG,GAE/CU,EAAOC,KAAKT,EAAGU,UAAU,aAAaC,MAAM,KAAK,IACjDC,EAAO,IAAIC,KAAK,CAAC,IAAIC,WAAWC,EAAOC,KAAKR,EAAM,YAAa,CAACS,KAAM,eACtEC,EAAK,IAAIC,UACVC,OAAO,OAAQR,EAAM,aAZ1B,oBAe4BS,MAAM,WAAD,OAAY/B,EAAZ,QAA4B,CACzDgC,OAAQ,OACRC,QAAS,GACTC,KAAMN,IAlBV,eAeOO,EAfP,iBAqB8DA,EAAaC,OArB3E,aAqBOC,EArBP,QAsBkBC,OAtBlB,wBAuBInC,EAAWkC,EAAWC,QACtBC,QAAQC,IAAIH,EAAWC,QAxB3B,UAyB6BP,MAAM,WAAD,OAAY/B,EAAZ,QAA4B,CACzDgC,OAAQ,OACRE,KAAMO,KAAKC,UAAU,CAACC,KAAMN,EAAWC,WA3B5C,eAyBQM,EAzBR,iBA8B+DA,EAAaR,OA9B5E,SA8BQS,EA9BR,QA+BmBP,QACdhC,EAASE,QAAQsC,IAAM,yBAAyBD,EAAWP,OAC3DhC,EAASE,QAAQuC,QAEjB5C,EAAW0C,EAAWG,QAnC3B,wBAuCI7C,EAAWkC,EAAWW,QAvC1B,QAyCG5C,EAAQI,QAAQuC,OAzCnB,mDA2CG5C,EAAW,EAAD,IA3Cb,4DAvBe,sBAuEf,OAlEA8C,qBAEA,WAEC,IAAKC,UAAUC,aAAc,OAC7BD,UAAUC,aAAaC,aAFL,CAAEC,OAAO,EAAOC,MAAO,CAAE1C,MAAO,CAAC2C,MAAO,MAAOzC,OAAQ,CAACyC,MAAO,MAAOC,WAAY,iBAEnDpE,MAAK,SAAAqE,GACjDrD,EAAQI,UACXJ,EAAQI,QAAQkD,UAAYD,EAC5BrD,EAAQI,QAAQmD,iBAAmB,SAACC,GAC/BxD,EAAQI,SAASJ,EAAQI,QAAQuC,YAGrCc,OAAM,SAAAD,GACRrB,QAAQC,IAAIoB,GACZE,MAAM,MAAQF,QAdI,IAmEnB,sBAAKG,UAAU,OAAf,UACC,uBAAOC,IAAK5D,EAAS6D,aAAW,IAEhC,sBAAKF,UAAU,SAAf,UAEC,qBAAKA,UAAU,MAAf,SACC,sBAAMA,UAAU,aAAhB,SACE7D,GACA,qCACCA,EACD,uBACA,uBAAO+D,aAAW,EAACC,UAAQ,EAACF,IAAK1D,WAMpC,qBAAKyD,UAAU,MAAf,SACC,qBAAKA,UAAU,UAAUI,QA1Fd,2CA0FX,SACC,qBAAKJ,UAAU,6B","file":"static/js/main.3497f1db.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport Main from './component/Main';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useEffect, useState, useRef } from 'react';\nimport '../style/Main.css';\n\nconst ENDPOINT = '127.0.0.1:3001';\n\nfunction Main() {\n\tconst [Display, setDisplay] = useState<string>();\n\tconst viewRef = useRef<HTMLVideoElement>(null);\n\tconst audioRef = useRef<HTMLAudioElement>(null);\n\n\tuseEffect(StartRec, []);\n\n\tfunction StartRec() {\n\t\tlet constraints = { audio: false, video: { width: {ideal: 9999}, height: {ideal: 9999}, facingMode: \"environment\"} };\n\t\tif (!navigator.mediaDevices) return;\n\t\tnavigator.mediaDevices.getUserMedia(constraints).then(media => {\n\t\t\tif (viewRef.current) {\n\t\t\t\tviewRef.current.srcObject = media;\n\t\t\t\tviewRef.current.onloadedmetadata = (e) => {\n\t\t\t\t\tif (viewRef.current) viewRef.current.play();\n\t\t\t\t}\n\t\t\t}\n\t\t}).catch(e => {\n\t\t\tconsole.log(e);\n\t\t\talert(\"Err\" + e);\n\t\t})\n\t}\n\n\tasync function Capture() {\n\t\tif (viewRef.current && audioRef.current) {\n\t\t\tviewRef.current.pause();\n\t\t\tsetDisplay(\"Loading ...\");\n\t\t\tlet cv = document.createElement('canvas');\n\t\t\tcv.width = viewRef.current.videoWidth;\n\t\t\tcv.height = viewRef.current.videoHeight;\n\t\t\tcv.getContext('2d')?.drawImage(viewRef.current, 0, 0);\n\n\t\t\tlet data = atob(cv.toDataURL('image/png').split(',')[1]);\n\t\t\tlet file = new Blob([new Uint8Array(Buffer.from(data, 'binary'))], {type: 'image/png'})\n\t\t\tlet fd = new FormData();\n\t\t\tfd.append(\"file\", file, \"image.png\");\n\t\t\t\n\t\t\ttry {\n\t\t\t\tlet OCR_Response = await fetch(`https://${ENDPOINT}/ocr`, {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: {},\n\t\t\t\t\tbody: fd\n\t\t\t\t});\n\t\n\t\t\t\tlet OCR_Result: {result?: string, detail?: string} = await OCR_Response.json();\n\t\t\t\tif (OCR_Result.result) {\n\t\t\t\t\tsetDisplay(OCR_Result.result);\n\t\t\t\t\tconsole.log(OCR_Result.result)\n\t\t\t\t\tlet TTS_Response = await fetch(`https://${ENDPOINT}/tts`, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\tbody: JSON.stringify({text: OCR_Result.result})\n\t\t\t\t\t});\n\t\n\t\t\t\t\tlet TTS_Result: {result?: string, detail?: string} = await TTS_Response.json();\n\t\t\t\t\tif (TTS_Result.result) {\n\t\t\t\t\t\taudioRef.current.src = \"data:audio/mp3;base64,\"+TTS_Result.result;\n\t\t\t\t\t\taudioRef.current.play();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetDisplay(TTS_Result.detail);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tsetDisplay(OCR_Result.detail);\n\n\t\t\t\tviewRef.current.play();\n\t\t\t} catch (e) {\n\t\t\t\tsetDisplay(e);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"Comp\">\n\t\t\t<video ref={viewRef} playsInline></video>\n\n\t\t\t<div className=\"Bottom\">\n\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<span className=\"TextResult\">\n\t\t\t\t\t\t{Display&&\n\t\t\t\t\t\t(<>\n\t\t\t\t\t\t\t{Display} \n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<audio playsInline controls ref={audioRef} />\n\t\t\t\t\t\t</>)\n\t\t\t\t\t\t}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"Shutter\" onClick={Capture}>\n\t\t\t\t\t\t<div className=\"ShutterBall\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\n\t\t\t</div>\n\n\t\t</div>\n\t);\n}\n\nexport default Main;\n"],"sourceRoot":""}